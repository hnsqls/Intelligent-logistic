<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace等于mapper接口类的全限定名,这样实现对应 -->
<mapper namespace="com.ls.sysuser.dao.SysUserMapper">

    <!-- 查询使用 select标签
            id = 方法名  绑定对应接口的方法名
            resultType = 返回值类型   方法的返回值类型
            标签内编写SQL语句          sql的参数和方法的参数一致
     -->
    <select id="selectByUsernameAndPassword" resultType="sysUser">
<!--        &lt;!&ndash; #{empId}代表动态传入的参数,并且进行赋值!后面详细讲解 &ndash;&gt;-->
<!--        select emp_id empId,emp_name empName, emp_salary empSalary from-->
<!--        t_emp where emp_id = #{empId}-->
        select * from sysuser
        where username = #{username} and password = #{password}

    </select>

    <select id="select" resultType="sysUser">
        select * from sysuser
        <where>
            <if test="id !=null">
                id = #{id}
            </if>
            <if test="username !=''">
            and  username =#{username}
             </if>
            <if test="nickname != ''">
              and  nickname =#{nickname}
            </if>

            <if test="email != ''">
                and email =#{email}
            </if>
        </where>

    </select>
    <delete id="deleteById" >
        delete from sysuser where id = #{id}

    </delete>

    <update id="updateEmailAndNicknameById" >
        update sysuser set email =#{email},nickname = #{nickname},password=#{password},
        status=#{status}
        where id = #{id}
    </update>

    <insert id="insertSysuser">
        insert into sysuser values(null,#{username},#{password},#{nickname},#{status},#{email},#{photo})
    </insert>
</mapper>